# =============================
# SENSOR ARRAY STACK
# =============================
# Centralized monitoring, logging, and security analytics for Homelab.
# Each service is documented for clarity, security, and maintainability.

services:
  # -------------------------
  # Loki (Log Aggregator)
  # -------------------------
  loki:
    hostname: loki
    container_name: loki
    image: ${LOKI_IMAGE:-grafana/loki:latest}                         # Image via env variable
    volumes:
      - ${DOCKERDIR:-/home/homelab/conf}/monitoring/loki/local-config.yaml:/etc/loki/local-config.yaml:ro  # Loki config (read-only)
    restart: ${RESTART:-unless-stopped}
    command: -config.file=/etc/loki/local-config.yaml
    stop_grace_period: 30s
    security_opt:
      - no-new-privileges:true
    networks:
      - internal
    labels:
      # üìπ Logging/Monitoring
      log_name: "loki"  # Main app label for logging (Promtail/Loki)
      prometheus.scrape: "true"  # Enable Prometheus scraping (if supported)
      prometheus.port: "3100"    # Prometheus port (Loki default)
      prometheus.path: "/metrics"  # Prometheus metrics path (if enabled)
      # üöÄ Traefik Enablement
      traefik.enable: "true"  # Enable Traefik reverse proxy for this service
      traefik.docker.network: "external"  # Traefik should use the external network
      # üéØ Traefik Routing/Rules
      traefik.http.routers.loki.tls: "true"  # Enable TLS
      traefik.http.routers.loki.entrypoints: "https"  # HTTPS entrypoint
      traefik.http.routers.loki.rule: "Host(`loki.cityzen.co.za`)"  # Domain routing rule
      traefik.http.routers.loki.service: "loki"  # Traefik service name
      # üõ°Ô∏è Middleware
      traefik.http.routers.loki.middlewares: "authelia@docker,no-poweredby@docker,even-less-secure-headers@docker"  # Auth, relaxed headers, hide X-Powered-By
      # üîå Service Port
      traefik.http.services.loki.loadbalancer.server.port: "3100"  # Internal port for load balancing

  # -------------------------
  # Promtail (Log Shipper)
  # -------------------------
  promtail:
    hostname: promtail
    container_name: promtail
    image: ${PROMTAIL_IMAGE:-grafana/promtail:latest}                 # Image via env variable
    restart: ${RESTART:-unless-stopped}
    volumes:
      - /var/log:/var/log:ro                                          # Host logs (read-only)
      - ${DOCKERDIR:-/home/homelab/conf}/monitoring/promtail/config.yml:/etc/promtail/config.yml:ro  # Config (read-only)
    stop_grace_period: 30s
    security_opt:
      - no-new-privileges:true
    command: -config.file=/etc/promtail/config.yml 
    networks:
      - internal
    labels:
      # üìπ Logging/Monitoring
      myapp.stack.group: "logs"

  # -------------------------
  # Grafana (Dashboards)
  # -------------------------
  grafana:
    hostname: grafana
    container_name: grafana
    image: ${GRAFANA_IMAGE:-grafana/grafana:latest}                   # Image via env variable
    restart: ${RESTART:-unless-stopped}
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning               # Provisioning path
      - GF_AUTH_ANONYMOUS_ENABLED=true                                # Enable anonymous auth
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin                             # Anonymous role
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode # Feature toggles
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
        EOF
        /run.sh
    volumes:
      - ${DOCKERDIR:-/home/homelab/conf}/monitoring/grafana/provisioning:/etc/grafana/provisioning:ro # Provisioning config (read-only)
      - ${DOCKERDIR:-/home/homelab/conf}/monitoring/grafana/data:/var/lib/grafana
    stop_grace_period: 30s
    security_opt:
      - no-new-privileges:true
    networks:
      - internal
    labels:
      # üìπ Logging/Monitoring
      log_name: "grafana"
      # üöÄ Traefik Enablement
      traefik.enable: "true"
      traefik.docker.network: "external"
      # üé• Traefik Router/Service Rules
      traefik.http.routers.grafana.tls: "true"
      traefik.http.routers.grafana.entrypoints: "https"
      traefik.http.routers.grafana.rule: "Host(`grafana.cityzen.co.za`)"
      # üõ° Security/Middleware
      traefik.http.routers.grafana.middlewares: "authelia@docker,even-less-secure-headers@docker"
      # üîå Port/Service Mapping
      traefik.http.services.grafana.loadbalancer.server.port: "3000"
      traefik.http.routers.grafana.service: "grafana" # Explicit Traefik service label

  # # -------------------------
  # # Wazuh (Security Analytics)
  # # -------------------------
  # wazuh.indexer:
  #   image: ${WAZUH_INDEXER_IMAGE:-wazuh/wazuh-indexer:4.11.2}         # Image via env variable
  #   container_name: wazuh.indexer
  #   hostname: wazuh.indexer
  #   restart: ${RESTART:-unless-stopped}
  #   networks:
  #     - internal
  #   stop_grace_period: 30s
  #   security_opt:
  #     - no-new-privileges:true      
  #   environment:
  #     OPENSEARCH_JAVA_OPTS: "-Xms1g -Xmx1g"
  #     bootstrap.memory_lock: "true"
  #     NODE_NAME: "wazuh.indexer"
  #     CLUSTER_INITIAL_MASTER_NODES: "wazuh.indexer"
  #     CLUSTER_NAME: "wazuh-cluster"
  #     PATH_DATA: /var/lib/wazuh-indexer
  #     PATH_LOGS: /var/log/wazuh-indexer
  #     HTTP_PORT: 9200-9299
  #     TRANSPORT_TCP_PORT: 9300-9399
  #     COMPATIBILITY_OVERRIDE_MAIN_RESPONSE_VERSION: "true"
  #     PLUGINS_SECURITY_SSL_HTTP_PEMCERT_FILEPATH: /usr/share/wazuh-indexer/certs/wazuh.indexer.pem
  #     PLUGINS_SECURITY_SSL_HTTP_PEMKEY_FILEPATH: /usr/share/wazuh-indexer/certs/wazuh.indexer.key
  #     PLUGINS_SECURITY_SSL_HTTP_PEMTRUSTEDCAS_FILEPATH: /usr/share/wazuh-indexer/certs/root-ca.pem
  #     PLUGINS_SECURITY_SSL_TRANSPORT_PEMCERT_FILEPATH: /usr/share/wazuh-indexer/certs/wazuh.indexer.pem
  #     PLUGINS_SECURITY_SSL_TRANSPORT_PEMKEY_FILEPATH: /usr/share/wazuh-indexer/certs/wazuh.indexer.key
  #     PLUGINS_SECURITY_SSL_TRANSPORT_PEMTRUSTEDCAS_FILEPATH: /usr/share/wazuh-indexer/certs/root-ca.pem
  #     PLUGINS_SECURITY_AUTHCZ_ADMIN_DN: CN=admin,OU=Wazuh,O=Wazuh,L=California,C=US
  #     PLUGINS_SECURITY_NODES_DN: CN=wazuh.indexer,OU=Wazuh,O=Wazuh,L=California,C=US
  #     PLUGINS_SECURITY_RESTAPI_ROLES_ENABLED: '["all_access","security_rest_api_access"]'
  #     PLUGINS_SECURITY_CHECK_SNAPSHOT_RESTORE_WRITE_PRIVILEGES: "true"
  #     PLUGINS_SECURITY_ENABLE_SNAPSHOT_RESTORE_PRIVILEGE: "true"
  #     PLUGINS_SECURITY_SYSTEM_INDICES_ENABLED: "true"
  #     PLUGINS_SECURITY_SYSTEM_INDICES_INDICES: '[".opendistro-alerting-config", ".opendistro-alerting-alert*", ".opendistro-anomaly-results*", ".opendistro-anomaly-detector*", ".opendistro-anomaly-checkpoints", ".opendistro-anomaly-detection-state", ".opendistro-reports-*", ".opendistro-notifications-*", ".opendistro-notebooks", ".opensearch-observability", ".opendistro-asynchronous-search-response*", ".replication-metadata-store"]'
  #     PLUGINS_SECURITY_ALLOW_DEFAULT_INIT_SECURITYINDEX: "true"
  #     CLUSTER_ROUTING_ALLOCATION_DISK_THRESHOLD_ENABLED: "false"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #     nofile:
  #       soft: 65536
  #       hard: 65536
  #   volumes:
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/data/wazuh-indexer-data:/var/lib/wazuh-indexer
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/config/wazuh_indexer_ssl_certs/root-ca.pem:/usr/share/wazuh-indexer/certs/root-ca.pem
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/config/wazuh_indexer_ssl_certs/wazuh.indexer-key.pem:/usr/share/wazuh-indexer/certs/wazuh.indexer.key
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/config/wazuh_indexer_ssl_certs/wazuh.indexer.pem:/usr/share/wazuh-indexer/certs/wazuh.indexer.pem
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/config/wazuh_indexer_ssl_certs/admin.pem:/usr/share/wazuh-indexer/certs/admin.pem
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/config/wazuh_indexer_ssl_certs/admin-key.pem:/usr/share/wazuh-indexer/certs/admin-key.pem
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/config/wazuh_indexer/wazuh.indexer.yml:/usr/share/wazuh-indexer/opensearch.yml
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/config/wazuh_indexer/internal_users.yml:/usr/share/wazuh-indexer/opensearch-security/internal_users.yml
  #   labels:
  #     - "myapp.stack.group=wazuh"


  # wazuh.dashboard:
  #   image: ${WAZUH_DASHBOARD_IMAGE:-wazuh/wazuh-dashboard:4.11.2}     # Image via env variable
  #   container_name: wazuh-dashboard
  #   hostname: wazuh-dashboard
  #   restart: ${RESTART:-unless-stopped}
  #   networks:
  #     - internal
  #     - external 
  #   stop_grace_period: 30s
  #   security_opt:
  #     - no-new-privileges:true
  #   environment:
  #     WAZUH_API_URL: https://wazuh.manager
  #     DASHBOARD_USERNAME: ${WAZUHA_DASHBOARD_USERNAME} # from .env
  #     DASHBOARD_PASSWORD: ${WAZUHA_DASHBOARD_PASSWORD} # from .env
  #     API_USERNAME: ${WAZUHA_API_USERNAME} # from .env
  #     API_PASSWORD: ${WAZUHA_API_PASSWORD} # from .env
  #     SERVER_HOST: 0.0.0.0
  #     SERVER_PORT: 5601
  #     OPENSEARCH_HOSTS: https://wazuh.indexer:9200
  #     OPENSEARCH_SSL_VERIFICATIONMODE: certificate
  #     OPENSEARCH_REQUESTHEADERSALLOWLIST: '["securitytenant","Authorization"]'
  #     OPENSEARCH_SECURITY_MULTITENANCY_ENABLED: "false"
  #     SERVER_SSL_ENABLED: "true"
  #     OPENSEARCH_SECURITY_READONLY_MODE_ROLES: '["kibana_read_only"]'
  #     SERVER_SSL_KEY: /usr/share/wazuh-dashboard/certs/wazuh-dashboard-key.pem
  #     SERVER_SSL_CERTIFICATE: /usr/share/wazuh-dashboard/certs/wazuh-dashboard.pem
  #     OPENSEARCH_SSL_CERTIFICATEAUTHORITIES: "/usr/share/wazuh-dashboard/certs/root-ca.pem"
  #     UISETTINGS_OVERRIDES_DEFAULTROUTE: /app/wz-home
  #   volumes:
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/config/wazuh_indexer_ssl_certs/wazuh.dashboard.pem:/usr/share/wazuh-dashboard/certs/wazuh-dashboard.pem
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/config/wazuh_indexer_ssl_certs/wazuh.dashboard-key.pem:/usr/share/wazuh-dashboard/certs/wazuh-dashboard-key.pem
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/config/wazuh_indexer_ssl_certs/root-ca.pem:/usr/share/wazuh-dashboard/certs/root-ca.pem
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/config/wazuh_dashboard/opensearch_dashboards.yml:/usr/share/wazuh-dashboard/config/opensearch_dashboards.yml
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/config/wazuh_dashboard/wazuh.yml:/usr/share/wazuh-dashboard/data/wazuh/config/wazuh.yml
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/data/wazuh-dashboard-config:/usr/share/wazuh-dashboard/data/wazuh/config
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/data/wazuh-dashboard-custom:/usr/share/wazuh-dashboard/plugins/wazuh/public/assets/custom
  #   depends_on:
  #     - wazuh.indexer
  #   labels:
  #     # üìπ Logging/Monitoring
  #     myapp.stack.group: "wazuh"
  #     # üöÄ Traefik Enablement
  #     traefik.enable: "true"
  #     traefik.docker.network: "external"
  #     # üé• Traefik Router/Service Rules
  #     traefik.http.routers.wazuh-dashboard.tls: "true"
  #     traefik.http.routers.wazuh-dashboard.entrypoints: "https"
  #     traefik.http.routers.wazuh-dashboard.rule: "Host(`tactical.cityzen.co.za`)"
  #     # üõ° Security/Middleware
  #     traefik.http.routers.wazuh-dashboard.middlewares: "authelia@docker,even-less-secure-headers@docker"
  #     # üîå Port/Service Mapping
  #     traefik.http.services.wazuh-dashboard.loadbalancer.server.port: "5601"
  #     traefik.http.services.wazuh-dashboard.loadbalancer.server.scheme: "https"
  #     traefik.http.routers.wazuh-dashboard.service: "wazuh-dashboard" # Explicit Traefik service label


  # wazuh.manager:
  #   image: wazuh/wazuh-manager:4.11.2
  #   container_name: wazuh.manager
  #   hostname: wazuh.manager
  #   restart: ${RESTART:-unless-stopped}
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #     nofile:
  #       soft: 655360
  #       hard: 655360
  #   ports:
  #     - "1514:1514"
  #     - "1515:1515"
  #     - "514:514/udp"
  #     - "55000:55000"        
  #   networks:
  #     - internal
  #   stop_grace_period: 30s
  #   security_opt:
  #     - no-new-privileges:true      
  #   environment:
  #     INDEXER_URL: https://wazuh.indexer:9200 # from .env
  #     INDEXER_USERNAME: ${WAZUHA_INDEXER_USERNAME} # from .env
  #     INDEXER_PASSWORD: ${WAZUHA_INDEXER_PASSWORD} # from .env
  #     FILEBEAT_SSL_VERIFICATION_MODE: full
  #     SSL_CERTIFICATE_AUTHORITIES: /etc/ssl/root-ca.pem
  #     SSL_CERTIFICATE: /etc/ssl/filebeat.pem
  #     SSL_KEY: /etc/ssl/filebeat.key
  #     API_USERNAME: ${WAZUHA_API_USERNAME} # from .env
  #     API_PASSWORD: ${WAZUHA_API_PASSWORD} # from .env
  #   volumes:
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/data/wazuh_api_configuration:/var/ossec/api/configuration
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/data/wazuh_etc:/var/ossec/etc
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/data/wazuh_logs:/var/ossec/logs
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/data/wazuh_queue:/var/ossec/queue
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/data/wazuh_var_multigroups:/var/ossec/var/multigroups
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/data/wazuh_integrations:/var/ossec/integrations
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/data/wazuh_active_response:/var/ossec/active-response/bin
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/data/wazuh_agentless:/var/ossec/agentless
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/data/wazuh_wodles:/var/ossec/wodles
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/data/filebeat_etc:/etc/filebeat
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/data/filebeat_var:/var/lib/filebeat
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/config/wazuh_indexer_ssl_certs/root-ca-manager.pem:/etc/ssl/root-ca.pem
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/config/wazuh_indexer_ssl_certs/wazuh.manager.pem:/etc/ssl/filebeat.pem
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/config/wazuh_indexer_ssl_certs/wazuh.manager-key.pem:/etc/ssl/filebeat.key
  #     - ${DOCKERDIR:-/home/homelab/conf}/wazuh/config/wazuh_cluster/wazuh_manager.conf:/wazuh-config-mount/etc/ossec.conf
  #   labels:
  #     - "myapp.stack.group=wazuh"



  # -------------------------
  # Uptime Kuma (Status Monitoring)
  # -------------------------
  uptimekuma:
    image: ${UPTIMEKUMA_IMAGE:-louislam/uptime-kuma:1}               # Image via env variable
    container_name: uptimekuma
    hostname: uptimekuma
    volumes:
      - ${DOCKERDIR:-/home/homelab}/kuma:/app/data
    networks:
      - internal
    environment:
      - UPTIMEKUMA_PUID=${PUID:-1000}                                # User ID for file permissions
      - UPTIMEKUMA_PGID=${PGID:-1000}                                # Group ID for file permissions
      - UPTIMEKUMA_TZ=${TZ:-Africa/Johannesburg}                     # Timezone
    restart: ${RESTART:-unless-stopped}
    stop_grace_period: 30s
    security_opt:
      - no-new-privileges:true
    labels:
      # üìπ Logging/Monitoring
      log_name: "uptimekuma"
      # üöÄ Traefik Enablement
      traefik.enable: "true"
      traefik.docker.network: "external"
      # üé• Traefik Router/Service Rules
      traefik.http.routers.uptimekuma.tls: "true"
      traefik.http.routers.uptimekuma.entrypoints: "https"
      traefik.http.routers.uptimekuma.rule: "Host(`statusdeck.cityzen.co.za`)"
      # üõ° Security/Middleware
      traefik.http.routers.uptimekuma.middlewares: "authelia@docker,even-less-secure-headers@docker,no-poweredby@docker"
      # üîå Port/Service Mapping
      traefik.http.services.uptimekuma.loadbalancer.server.port: "3001"
      traefik.http.routers.uptimekuma.service: "uptimekuma" # Explicit Traefik service label



# =============================
# NETWORKS
# =============================
networks:
  internal:
    external: true
    name: ${INTERNAL_NETWORK:-internal}    # Internal Docker network

  external:
    external: true
    name: ${EXTERNAL_NETWORK:-external}    # External Docker network
